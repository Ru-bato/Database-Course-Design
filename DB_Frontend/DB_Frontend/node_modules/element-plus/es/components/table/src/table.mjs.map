{"version":3,"file":"table.mjs","sources":["../../../../../../packages/components/table/src/table.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"tableWrapper\"\n    :class=\"[\n      {\n        [ns.m('fit')]: fit,\n        [ns.m('striped')]: stripe,\n        [ns.m('border')]: border || isGroup,\n        [ns.m('hidden')]: isHidden,\n        [ns.m('group')]: isGroup,\n        [ns.m('fluid-height')]: maxHeight,\n        [ns.m('scrollable-x')]: layout.scrollX.value,\n        [ns.m('scrollable-y')]: layout.scrollY.value,\n        [ns.m('enable-row-hover')]: !store.states.isComplex.value,\n        [ns.m('enable-row-transition')]:\n          (store.states.data.value || []).length !== 0 &&\n          (store.states.data.value || []).length < 100,\n        'has-footer': showSummary,\n      },\n      ns.m(tableSize),\n      className,\n      ns.b(),\n      ns.m(`layout-${tableLayout}`),\n    ]\"\n    :style=\"style\"\n    :data-prefix=\"ns.namespace.value\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <div :class=\"ns.e('inner-wrapper')\" :style=\"tableInnerStyle\">\n      <div ref=\"hiddenColumns\" class=\"hidden-columns\">\n        <slot />\n      </div>\n      <div\n        v-if=\"showHeader && tableLayout === 'fixed'\"\n        ref=\"headerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('header-wrapper')\"\n      >\n        <table\n          ref=\"tableHeader\"\n          :class=\"ns.e('header')\"\n          :style=\"tableBodyStyles\"\n          border=\"0\"\n          cellpadding=\"0\"\n          cellspacing=\"0\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-header\n            ref=\"tableHeaderRef\"\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            @set-drag-visible=\"setDragVisible\"\n          />\n        </table>\n      </div>\n      <div ref=\"bodyWrapper\" :class=\"ns.e('body-wrapper')\">\n        <el-scrollbar\n          ref=\"scrollBarRef\"\n          :view-style=\"scrollbarViewStyle\"\n          :wrap-style=\"scrollbarStyle\"\n          :always=\"scrollbarAlwaysOn\"\n        >\n          <table\n            ref=\"tableBody\"\n            :class=\"ns.e('body')\"\n            cellspacing=\"0\"\n            cellpadding=\"0\"\n            border=\"0\"\n            :style=\"{\n              width: bodyWidth,\n              tableLayout,\n            }\"\n          >\n            <hColgroup\n              :columns=\"store.states.columns.value\"\n              :table-layout=\"tableLayout\"\n            />\n            <table-header\n              v-if=\"showHeader && tableLayout === 'auto'\"\n              ref=\"tableHeaderRef\"\n              :class=\"ns.e('body-header')\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              @set-drag-visible=\"setDragVisible\"\n            />\n            <table-body\n              :context=\"context\"\n              :highlight=\"highlightCurrentRow\"\n              :row-class-name=\"rowClassName\"\n              :tooltip-effect=\"tooltipEffect\"\n              :tooltip-options=\"tooltipOptions\"\n              :row-style=\"rowStyle\"\n              :store=\"store\"\n              :stripe=\"stripe\"\n            />\n            <table-footer\n              v-if=\"showSummary && tableLayout === 'auto'\"\n              :class=\"ns.e('body-footer')\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              :sum-text=\"computedSumText\"\n              :summary-method=\"summaryMethod\"\n            />\n          </table>\n          <div\n            v-if=\"isEmpty\"\n            ref=\"emptyBlock\"\n            :style=\"emptyBlockStyle\"\n            :class=\"ns.e('empty-block')\"\n          >\n            <span :class=\"ns.e('empty-text')\">\n              <slot name=\"empty\">{{ computedEmptyText }}</slot>\n            </span>\n          </div>\n          <div\n            v-if=\"$slots.append\"\n            ref=\"appendWrapper\"\n            :class=\"ns.e('append-wrapper')\"\n          >\n            <slot name=\"append\" />\n          </div>\n        </el-scrollbar>\n      </div>\n      <div\n        v-if=\"showSummary && tableLayout === 'fixed'\"\n        v-show=\"!isEmpty\"\n        ref=\"footerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('footer-wrapper')\"\n      >\n        <table\n          :class=\"ns.e('footer')\"\n          cellspacing=\"0\"\n          cellpadding=\"0\"\n          border=\"0\"\n          :style=\"tableBodyStyles\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-footer\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            :sum-text=\"computedSumText\"\n            :summary-method=\"summaryMethod\"\n          />\n        </table>\n      </div>\n      <div v-if=\"border || isGroup\" :class=\"ns.e('border-left-patch')\" />\n    </div>\n    <div\n      v-show=\"resizeProxyVisible\"\n      ref=\"resizeProxy\"\n      :class=\"ns.e('column-resize-proxy')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, getCurrentInstance, provide } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { Mousewheel } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { createStore } from './store/helper'\nimport TableLayout from './table-layout'\nimport TableHeader from './table-header'\nimport TableBody from './table-body'\nimport TableFooter from './table-footer'\nimport useUtils from './table/utils-helper'\nimport { convertToRows } from './table-header/utils-helper'\nimport useStyle from './table/style-helper'\nimport useKeyRender from './table/key-render-helper'\nimport defaultProps from './table/defaults'\nimport { TABLE_INJECTION_KEY } from './tokens'\nimport { hColgroup } from './h-helper'\nimport { useScrollbar } from './composables/use-scrollbar'\n\nimport type { Table } from './table/defaults'\n\nlet tableIdSeed = 1\nexport default defineComponent({\n  name: 'ElTable',\n  directives: {\n    Mousewheel,\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup,\n  },\n  props: defaultProps,\n  emits: [\n    'select',\n    'select-all',\n    'selection-change',\n    'cell-mouse-enter',\n    'cell-mouse-leave',\n    'cell-contextmenu',\n    'cell-click',\n    'cell-dblclick',\n    'row-click',\n    'row-contextmenu',\n    'row-dblclick',\n    'header-click',\n    'header-contextmenu',\n    'sort-change',\n    'filter-change',\n    'current-change',\n    'header-dragend',\n    'expand-change',\n  ],\n  setup(props) {\n    type Row = typeof props.data[number]\n    const { t } = useLocale()\n    const ns = useNamespace('table')\n    const table = getCurrentInstance() as Table<Row>\n    provide(TABLE_INJECTION_KEY, table)\n    const store = createStore<Row>(table, props)\n    table.store = store\n    const layout = new TableLayout<Row>({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader,\n    })\n    table.layout = layout\n\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0)\n\n    /**\n     * open functions\n     */\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort,\n    } = useUtils<Row>(store)\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n    } = useStyle<Row>(props, layout, store, table)\n\n    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } =\n      useScrollbar()\n\n    const debouncedUpdateLayout = debounce(doLayout, 50)\n\n    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`\n    table.tableId = tableId\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout,\n    }\n    const computedSumText = computed(\n      () => props.sumText ?? t('el.table.sumText')\n    )\n\n    const computedEmptyText = computed(() => {\n      return props.emptyText ?? t('el.table.emptyText')\n    })\n\n    const columns = computed(() => {\n      return convertToRows(store.states.originColumns.value)[0]\n    })\n\n    useKeyRender(table)\n\n    return {\n      ns,\n      layout,\n      store,\n      columns,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      /**\n       * @description used in single selection Table, set a certain row selected. If called without any parameter, it will clear selection\n       */\n      setCurrentRow,\n      /**\n       * @description returns the currently selected rows\n       */\n      getSelectionRows,\n      /**\n       * @description used in multiple selection Table, toggle if a certain row is selected. With the second parameter, you can directly set if this row is selected\n       */\n      toggleRowSelection,\n      /**\n       * @description used in multiple selection Table, clear user selection\n       */\n      clearSelection,\n      /**\n       * @description clear filters of the columns whose `columnKey` are passed in. If no params, clear all filters\n       */\n      clearFilter,\n      /**\n       * @description used in multiple selection Table, toggle select all and deselect all\n       */\n      toggleAllSelection,\n      /**\n       * @description used in expandable Table or tree Table, toggle if a certain row is expanded. With the second parameter, you can directly set if this row is expanded or collapsed\n       */\n      toggleRowExpansion,\n      /**\n       * @description clear sorting, restore data to the original order\n       */\n      clearSort,\n      /**\n       * @description refresh the layout of Table. When the visibility of Table changes, you may need to call this method to get a correct layout\n       */\n      doLayout,\n      /**\n       * @description sort Table manually. Property `prop` is used to set sort column, property `order` is used to set sort order\n       */\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n      scrollBarRef,\n      /**\n       * @description scrolls to a particular set of coordinates\n       */\n      scrollTo,\n      /**\n       * @description set horizontal scroll position\n       */\n      setScrollLeft,\n      /**\n       * @description set vertical scroll position\n       */\n      setScrollTop,\n    }\n  },\n})\n</script>\n"],"names":["_resolveComponent","_resolveDirective","_openBlock","_createElementBlock","_normalizeClass","_normalizeStyle","_renderSlot","_withDirectives","_createElementVNode","_createVNode","_createCommentVNode","_withCtx","_createBlock","_createTextVNode","_vShow"],"mappings":"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"}